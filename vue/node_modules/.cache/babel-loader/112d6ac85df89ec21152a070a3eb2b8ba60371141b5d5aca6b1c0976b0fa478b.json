{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    user: null,\n    token: localStorage.getItem('token') || null,\n    movies: [],\n    watchlist: [],\n    currentMovie: null\n  },\n  mutations: {\n    setUser(state, user) {\n      state.user = user;\n    },\n    setToken(state, token) {\n      state.token = token;\n      localStorage.setItem('token', token);\n    },\n    clearAuth(state) {\n      state.user = null;\n      state.token = null;\n      localStorage.removeItem('token');\n    },\n    setMovies(state, movies) {\n      state.movies = movies;\n    },\n    setCurrentMovie(state, movie) {\n      state.currentMovie = movie;\n    },\n    setWatchlist(state, watchlist) {\n      state.watchlist = watchlist;\n    }\n  },\n  actions: {\n    async login({\n      commit\n    }, credentials) {\n      const response = await axios.post('/api/auth/login', credentials);\n      commit('setToken', response.data.token);\n      commit('setUser', response.data.user);\n    },\n    async register({\n      commit\n    }, userData) {\n      const response = await axios.post('/api/auth/register', userData);\n      commit('setToken', response.data.token);\n      commit('setUser', response.data.user);\n    },\n    logout({\n      commit\n    }) {\n      commit('clearAuth');\n    },\n    async fetchMovies({\n      commit\n    }, {\n      page = 1,\n      query = ''\n    }) {\n      try {\n        const response = await axios.get(query ? `/api/movies/search?query=${query}&page=${page}` : '/api/movies/trending');\n        commit('setMovies', response.data.results);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n        throw error;\n      }\n    },\n    async fetchMovie({\n      commit\n    }, id) {\n      try {\n        const response = await axios.get(`/api/movies/${id}`);\n        commit('setCurrentMovie', response.data);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n        throw error;\n      }\n    },\n    async fetchWatchlist({\n      commit\n    }) {\n      const response = await axios.get('/api/watchlist');\n      commit('setWatchlist', response.data);\n    },\n    async addToWatchlist({\n      dispatch\n    }, movieId) {\n      await axios.post('/api/watchlist', {\n        movieId\n      });\n      dispatch('fetchWatchlist');\n    },\n    async removeFromWatchlist({\n      dispatch\n    }, movieId) {\n      await axios.delete(`/api/watchlist/${movieId}`);\n      dispatch('fetchWatchlist');\n    }\n  },\n  getters: {\n    isAuthenticated: state => !!state.token,\n    currentUser: state => state.user,\n    movies: state => state.movies,\n    currentMovie: state => state.currentMovie,\n    watchlist: state => state.watchlist\n  }\n});","map":{"version":3,"names":["Vue","Vuex","axios","use","Store","state","user","token","localStorage","getItem","movies","watchlist","currentMovie","mutations","setUser","setToken","setItem","clearAuth","removeItem","setMovies","setCurrentMovie","movie","setWatchlist","actions","login","commit","credentials","response","post","data","register","userData","logout","fetchMovies","page","query","get","results","error","console","fetchMovie","id","fetchWatchlist","addToWatchlist","dispatch","movieId","removeFromWatchlist","delete","getters","isAuthenticated","currentUser"],"sources":["C:/workspaces/Movie_Trend_Explorer/vue/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport axios from 'axios'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    user: null,\r\n    token: localStorage.getItem('token') || null,\r\n    movies: [],\r\n    watchlist: [],\r\n    currentMovie: null\r\n  },\r\n  mutations: {\r\n    setUser(state, user) {\r\n      state.user = user\r\n    },\r\n    setToken(state, token) {\r\n      state.token = token\r\n      localStorage.setItem('token', token)\r\n    },\r\n    clearAuth(state) {\r\n      state.user = null\r\n      state.token = null\r\n      localStorage.removeItem('token')\r\n    },\r\n    setMovies(state, movies) {\r\n      state.movies = movies\r\n    },\r\n    setCurrentMovie(state, movie) {\r\n      state.currentMovie = movie\r\n    },\r\n    setWatchlist(state, watchlist) {\r\n      state.watchlist = watchlist\r\n    }\r\n  },\r\n  actions: {\r\n    async login({ commit }, credentials) {\r\n      const response = await axios.post('/api/auth/login', credentials)\r\n      commit('setToken', response.data.token)\r\n      commit('setUser', response.data.user)\r\n    },\r\n    async register({ commit }, userData) {\r\n      const response = await axios.post('/api/auth/register', userData)\r\n      commit('setToken', response.data.token)\r\n      commit('setUser', response.data.user)\r\n    },\r\n    logout({ commit }) {\r\n      commit('clearAuth')\r\n    },\r\n    async fetchMovies({ commit }, { page = 1, query = '' }) {\r\n      try {\r\n        const response = await axios.get(query \r\n          ? `/api/movies/search?query=${query}&page=${page}`\r\n          : '/api/movies/trending'\r\n        )\r\n        commit('setMovies', response.data.results)\r\n      } catch (error) {\r\n        console.error('Error fetching movies:', error)\r\n        throw error\r\n      }\r\n    },\r\n    async fetchMovie({ commit }, id) {\r\n      try {\r\n        const response = await axios.get(`/api/movies/${id}`)\r\n        commit('setCurrentMovie', response.data)\r\n      } catch (error) {\r\n        console.error('Error fetching movie details:', error)\r\n        throw error\r\n      }\r\n    },\r\n    async fetchWatchlist({ commit }) {\r\n      const response = await axios.get('/api/watchlist')\r\n      commit('setWatchlist', response.data)\r\n    },\r\n    async addToWatchlist({ dispatch }, movieId) {\r\n      await axios.post('/api/watchlist', { movieId })\r\n      dispatch('fetchWatchlist')\r\n    },\r\n    async removeFromWatchlist({ dispatch }, movieId) {\r\n      await axios.delete(`/api/watchlist/${movieId}`)\r\n      dispatch('fetchWatchlist')\r\n    }\r\n  },\r\n  getters: {\r\n    isAuthenticated: state => !!state.token,\r\n    currentUser: state => state.user,\r\n    movies: state => state.movies,\r\n    currentMovie: state => state.currentMovie,\r\n    watchlist: state => state.watchlist\r\n  }\r\n}) "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}