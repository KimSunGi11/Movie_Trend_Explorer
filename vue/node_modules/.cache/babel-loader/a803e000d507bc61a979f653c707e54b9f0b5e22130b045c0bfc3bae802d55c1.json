{"ast":null,"code":"import _regeneratorRuntime from \"C:/workspaces/Movie_Trend_Explorer/vue/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/workspaces/Movie_Trend_Explorer/vue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport axios from 'axios';\nimport NoPoster from '@/assets/no-poster.svg';\nexport default {\n  name: 'Home',\n  data: function data() {\n    return {\n      movies: [],\n      searchQuery: '',\n      isLoading: false,\n      error: null,\n      defaultPoster: NoPoster\n    };\n  },\n  created: function created() {\n    this.fetchPopularMovies();\n  },\n  methods: {\n    fetchPopularMovies: function fetchPopularMovies() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _response$data$result, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this.isLoading = true;\n              _this.error = null;\n              _context.prev = 2;\n              _context.next = 5;\n              return axios.get('http://localhost:8080/api/movies/trending');\n            case 5:\n              response = _context.sent;\n              console.log('API Response:', response.data);\n              console.log('First movie:', response.data.results[0]);\n              console.log('First movie poster path:', (_response$data$result = response.data.results[0]) === null || _response$data$result === void 0 ? void 0 : _response$data$result.posterPath);\n              if (response.data && Array.isArray(response.data.results)) {\n                _this.movies = response.data.results.map(function (movie) {\n                  console.log('Movie poster path:', movie.posterPath);\n                  return movie;\n                });\n              } else {\n                _this.error = '영화 데이터 형식이 올바르지 않습니다.';\n                console.error('Invalid data format:', response.data);\n              }\n              _context.next = 16;\n              break;\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](2);\n              _this.error = '영화 데이터를 불러오는데 실패했습니다. 잠시 후 다시 시도해주세요.';\n              console.error('Error fetching movies:', _context.t0);\n            case 16:\n              _context.prev = 16;\n              _this.isLoading = false;\n              return _context.finish(16);\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 12, 16, 19]]);\n      }))();\n    },\n    getImageUrl: function getImageUrl(path) {\n      if (!path) return this.defaultPoster;\n      if (path.startsWith('http')) return path;\n      return \"https://image.tmdb.org/t/p/original\".concat(path);\n    },\n    handleImageError: function handleImageError(e) {\n      e.target.src = this.defaultPoster;\n    },\n    formatDate: function formatDate(date) {\n      if (!date) return '';\n      return new Date(date).toLocaleDateString('ko-KR', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    },\n    handleSearch: function handleSearch() {\n      if (this.searchQuery.trim()) {\n        this.$router.push(\"/search?query=\".concat(encodeURIComponent(this.searchQuery.trim())));\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","NoPoster","name","data","movies","searchQuery","isLoading","error","defaultPoster","created","fetchPopularMovies","methods","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_response$data$result","response","wrap","_callee$","_context","prev","next","get","sent","console","log","results","posterPath","Array","isArray","map","movie","t0","finish","stop","getImageUrl","path","startsWith","concat","handleImageError","e","target","src","formatDate","date","Date","toLocaleDateString","year","month","day","handleSearch","trim","$router","push","encodeURIComponent"],"sources":["src/views/Home.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <!-- Hero Section with Search -->\n    <section class=\"hero\">\n      <div class=\"container\">\n        <div class=\"hero-content text-center\">\n          <h1>Welcome to Movie Trend Explorer</h1>\n          <h2>Millions of movies to discover. Explore now.</h2>\n          <div class=\"search-container\">\n            <input \n              type=\"text\" \n              class=\"form-control search-input\" \n              placeholder=\"Search for a movie...\"\n              v-model=\"searchQuery\"\n              @keyup.enter=\"handleSearch\"\n            >\n            <button class=\"btn btn-primary search-button\" @click=\"handleSearch\">Search</button>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <!-- Popular Movies Section -->\n    <section class=\"popular-movies\">\n      <div class=\"container\">\n        <h2 class=\"section-title\">Popular Movies</h2>\n        \n        <!-- Loading State -->\n        <div v-if=\"isLoading\" class=\"text-center py-5\">\n          <div class=\"spinner-border text-primary\" role=\"status\">\n            <span class=\"visually-hidden\">Loading...</span>\n          </div>\n          <p class=\"mt-2\">Loading movies...</p>\n        </div>\n\n        <!-- Error State -->\n        <div v-else-if=\"error\" class=\"alert alert-danger\" role=\"alert\">\n          {{ error }}\n        </div>\n\n        <!-- Movies Grid -->\n        <div v-else class=\"row\">\n          <div v-for=\"movie in movies\" :key=\"movie.id\" class=\"col-md-3 mb-4\">\n            <router-link :to=\"{ name: 'MovieDetail', params: { id: movie.id }}\" class=\"movie-card\">\n              <img \n                :src=\"getImageUrl(movie.posterPath)\" \n                :alt=\"movie.title\"\n                class=\"movie-poster\"\n                @error=\"handleImageError\"\n              >\n              <div class=\"movie-info\">\n                <h3 class=\"movie-title\">{{ movie.title }}</h3>\n                <p class=\"movie-date\">{{ formatDate(movie.releaseDate) }}</p>\n                <div class=\"movie-rating\">\n                  <span class=\"rating\">★ {{ movie.voteAverage?.toFixed(1) || 'N/A' }}</span>\n                  <span class=\"vote-count\">({{ movie.voteCount || 0 }})</span>\n                </div>\n              </div>\n            </router-link>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport NoPoster from '@/assets/no-poster.svg'\n\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      movies: [],\n      searchQuery: '',\n      isLoading: false,\n      error: null,\n      defaultPoster: NoPoster\n    }\n  },\n  created() {\n    this.fetchPopularMovies()\n  },\n  methods: {\n    async fetchPopularMovies() {\n      this.isLoading = true\n      this.error = null\n      \n      try {\n        const response = await axios.get('http://localhost:8080/api/movies/trending')\n        console.log('API Response:', response.data)\n        console.log('First movie:', response.data.results[0])\n        console.log('First movie poster path:', response.data.results[0]?.posterPath)\n        \n        if (response.data && Array.isArray(response.data.results)) {\n          this.movies = response.data.results.map(movie => {\n            console.log('Movie poster path:', movie.posterPath)\n            return movie\n          })\n        } else {\n          this.error = '영화 데이터 형식이 올바르지 않습니다.'\n          console.error('Invalid data format:', response.data)\n        }\n      } catch (error) {\n        this.error = '영화 데이터를 불러오는데 실패했습니다. 잠시 후 다시 시도해주세요.'\n        console.error('Error fetching movies:', error)\n      } finally {\n        this.isLoading = false\n      }\n    },\n    getImageUrl(path) {\n      if (!path) return this.defaultPoster\n      if (path.startsWith('http')) return path\n      return `https://image.tmdb.org/t/p/original${path}`\n    },\n    handleImageError(e) {\n      e.target.src = this.defaultPoster\n    },\n    formatDate(date) {\n      if (!date) return ''\n      return new Date(date).toLocaleDateString('ko-KR', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      })\n    },\n    handleSearch() {\n      if (this.searchQuery.trim()) {\n        this.$router.push(`/search?query=${encodeURIComponent(this.searchQuery.trim())}`)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.hero {\n  background: linear-gradient(to right, #01b4e4, #0d253f);\n  color: white;\n  padding: 4rem 0;\n  margin-bottom: 3rem;\n}\n\n.hero-content {\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.hero h1 {\n  font-size: 3rem;\n  margin-bottom: 1rem;\n}\n\n.hero h2 {\n  font-size: 2rem;\n  margin-bottom: 2rem;\n  font-weight: 300;\n}\n\n.search-container {\n  display: flex;\n  gap: 1rem;\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.search-input {\n  font-size: 1.2rem;\n  padding: 1rem;\n  border-radius: 30px;\n  border: none;\n}\n\n.search-button {\n  padding: 0 2rem;\n  border-radius: 30px;\n  font-size: 1.2rem;\n}\n\n.section-title {\n  font-size: 1.8rem;\n  margin-bottom: 2rem;\n  font-weight: 600;\n}\n\n.movie-card {\n  display: block;\n  text-decoration: none;\n  color: inherit;\n  background: white;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.2s;\n  height: 100%;\n}\n\n.movie-card:hover {\n  transform: translateY(-5px);\n}\n\n.movie-poster {\n  width: 100%;\n  height: 360px;\n  object-fit: cover;\n}\n\n.movie-info {\n  padding: 1rem;\n}\n\n.movie-title {\n  font-size: 1rem;\n  margin-bottom: 0.5rem;\n  font-weight: 600;\n}\n\n.movie-date {\n  color: #666;\n  font-size: 0.9rem;\n  margin-bottom: 0.5rem;\n}\n\n.movie-rating {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.rating {\n  color: #f5c518;\n  font-weight: 600;\n}\n\n.vote-count {\n  color: #666;\n  font-size: 0.9rem;\n}\n</style> "],"mappings":";;;;;;;;;;;AAmEA,OAAAA,KAAA;AACA,OAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,MAAA;MACAC,WAAA;MACAC,SAAA;MACAC,KAAA;MACAC,aAAA,EAAAP;IACA;EACA;EACAQ,OAAA,WAAAA,QAAA;IACA,KAAAC,kBAAA;EACA;EACAC,OAAA;IACAD,kBAAA,WAAAA,mBAAA;MAAA,IAAAE,KAAA;MAAA,OAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,qBAAA,EAAAC,QAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACAX,KAAA,CAAAN,SAAA;cACAM,KAAA,CAAAL,KAAA;cAAAc,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAGAvB,KAAA,CAAAwB,GAAA;YAAA;cAAAN,QAAA,GAAAG,QAAA,CAAAI,IAAA;cACAC,OAAA,CAAAC,GAAA,kBAAAT,QAAA,CAAAf,IAAA;cACAuB,OAAA,CAAAC,GAAA,iBAAAT,QAAA,CAAAf,IAAA,CAAAyB,OAAA;cACAF,OAAA,CAAAC,GAAA,8BAAAV,qBAAA,GAAAC,QAAA,CAAAf,IAAA,CAAAyB,OAAA,iBAAAX,qBAAA,uBAAAA,qBAAA,CAAAY,UAAA;cAEA,IAAAX,QAAA,CAAAf,IAAA,IAAA2B,KAAA,CAAAC,OAAA,CAAAb,QAAA,CAAAf,IAAA,CAAAyB,OAAA;gBACAhB,KAAA,CAAAR,MAAA,GAAAc,QAAA,CAAAf,IAAA,CAAAyB,OAAA,CAAAI,GAAA,WAAAC,KAAA;kBACAP,OAAA,CAAAC,GAAA,uBAAAM,KAAA,CAAAJ,UAAA;kBACA,OAAAI,KAAA;gBACA;cACA;gBACArB,KAAA,CAAAL,KAAA;gBACAmB,OAAA,CAAAnB,KAAA,yBAAAW,QAAA,CAAAf,IAAA;cACA;cAAAkB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAa,EAAA,GAAAb,QAAA;cAEAT,KAAA,CAAAL,KAAA;cACAmB,OAAA,CAAAnB,KAAA,2BAAAc,QAAA,CAAAa,EAAA;YAAA;cAAAb,QAAA,CAAAC,IAAA;cAEAV,KAAA,CAAAN,SAAA;cAAA,OAAAe,QAAA,CAAAc,MAAA;YAAA;YAAA;cAAA,OAAAd,QAAA,CAAAe,IAAA;UAAA;QAAA,GAAApB,OAAA;MAAA;IAEA;IACAqB,WAAA,WAAAA,YAAAC,IAAA;MACA,KAAAA,IAAA,cAAA9B,aAAA;MACA,IAAA8B,IAAA,CAAAC,UAAA,iBAAAD,IAAA;MACA,6CAAAE,MAAA,CAAAF,IAAA;IACA;IACAG,gBAAA,WAAAA,iBAAAC,CAAA;MACAA,CAAA,CAAAC,MAAA,CAAAC,GAAA,QAAApC,aAAA;IACA;IACAqC,UAAA,WAAAA,WAAAC,IAAA;MACA,KAAAA,IAAA;MACA,WAAAC,IAAA,CAAAD,IAAA,EAAAE,kBAAA;QACAC,IAAA;QACAC,KAAA;QACAC,GAAA;MACA;IACA;IACAC,YAAA,WAAAA,aAAA;MACA,SAAA/C,WAAA,CAAAgD,IAAA;QACA,KAAAC,OAAA,CAAAC,IAAA,kBAAAf,MAAA,CAAAgB,kBAAA,MAAAnD,WAAA,CAAAgD,IAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}